package moonbitlang/core/ref

alias @moonbitlang/core/num as @num

// Values
fn ref[T](T) -> Ref[T]

// Types and methods
impl Ref {
  decr[T : @num.Num](Self[T], ~value : T = ..) -> Unit
  incr[T : @num.Num](Self[T], ~value : T = ..) -> Unit
  map[T, R](Self[T], (T) -> R) -> Self[R]
  protect[T, R](Self[T], T, () -> R) -> R
  swap[T](Self[T], Self[T]) -> Unit
  to_string[X : Show](Self[X]) -> String
  update[T](Self[T], (T) -> T) -> Unit
}

// Traits

// Extension Methods

