package moonbitlang/core/strconv

// Values
fn parse[A : FromStr](String) -> Result[A, String]

fn parse_bool(String) -> Result[Bool, String]

fn parse_double(String) -> Result[Double, String]

fn parse_int(String, ~base : Int = ..) -> Result[Int, String]

fn parse_int64(String, ~base : Int = ..) -> Result[Int64, String]

// Types and methods
type Decimal
impl Decimal {
  from_int64(Int64) -> Self
  new() -> Self
  parse_decimal(String) -> Result[Self, String]
  shift(Self, Int) -> Unit
  to_double(Self) -> Result[Double, String]
}

type Number

// Traits
pub trait FromStr {
  from_string(String) -> Result[Self, String]
}

// Extension Methods
impl FromStr for Bool

impl FromStr for Int

impl FromStr for Int64

impl FromStr for Double

